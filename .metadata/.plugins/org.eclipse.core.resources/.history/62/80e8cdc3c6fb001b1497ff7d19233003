package Proyecto;
/*Diseñar y codificar una aplicacion informatica para una compañia aeroportuaria satisfaciendo los siguientes requisitos:
 * -Para cada aeropuerto es necesario saber:
 * 	a)Todas las compañias de vuelos que operan en el.
 * 	b)Nombre del Aeropuerto, la ciudad donde se ubica y el pais al que pertenece.
 * -Cada compañia se caracteriza por el nombre y la lista de vuelos que ofrece.
 * -Los vuelos estan definidos por su identificador, la ciudad de origen, la ciudad de destino, el precio del viaje, la lista
 * de pasajeros, el nro maximo de pasajeros permitidos en el vuelo y el nro real de pasajeros que han reservado asiento en el
 * avion.
 * -Los aeropuertos pueden ser privados o publicos.
 * 	a)Los aeropuertos privados tienen una serie de empresas  que los patrocinan y es necesario saber el nombre de cada una de
 * 	  esas empresas.
 * 	b)Para los aeropuertos publicos se requiere saber la cantidad de dinero correspondiente a la subvencion gubernamental
 * -Se necesita gestionar tambien la informacion de los pasajeros.
 * 	a)Para cada pasajero se necesita saber nombre, nro de pasaporte y nacionalidad.
 * 
 * 
 * La aplicacion tendra un menu con las siguientes opciones:
 * 1)Consultar los aeropuertos gestionados, indicando separadamente publicos y los privados. Para cada unos de ellos debera
 * mostrar su nombre, la ciudad de ubicacion, y el pais al que pertenece.
 * 2)Visualizar las empresas que patrocinan un determinado aeropuerto en caso de que sea privado, o la cuantia de la subvencion
 * en caso de que se trate de un aeropuerto publico.
 * 3)Para un determinado aeropuerto, se debe mostrar la lista de compañias que vuelan desde ese aeropuerto.
 * 4)Para una determinada compañia que opera en un aeropuerto concreto, listar todos los posibles vuelos que dicha compañia
 * ofrece, mostrando su identificador, la ciudad de origen y destino y el precio del vuelo.
 * 5)Mostrar todos los posibles vuelos (Identificador) que parten de una ciudad origen a una destino (Indicadas por el usuario)
 * y mostrar su precio*/


import java.util.Scanner;



public class Principal {
	static Scanner entrada = new Scanner(System.in);
	final static int num = 4;//Nro de aeropuertos
	static Aeropuerto aeropuertos[] = new Aeropuerto[num];
	
	public static void main(String[] args) {
		//Insertar datos de los aeropuertos
		insertarDatosAeropuerto(aeropuertos);
		//Menu
		menu();
	}
	
	public static void insertarDatosAeropuerto(Aeropuerto aero[]) {
		aero[0] = new AeropuertoPublico("Jorge Chavez", "Lima", "Peru", 80000000);
		aero[0].insertarCompañia(new Compañia("AeroPeru"));
		aero[0].insertarCompañia(new Compañia("LATAM"));
		aero[0].getCompañia("AeroPeru").insertarVuelo(new Vuelo("IB20", "Lima", "Mexico", 150.90, 150));
		aero[0].getCompañia("AeroPeru").insertarVuelo(new Vuelo("IB21", "Lima", "Buenos Aires", 180.99, 120));
		aero[0].getCompañia("LATAM").insertarVuelo(new Vuelo("FC12", "Lima", "Londres", 500.90, 180));
		aero[0].getCompañia("AeroPeru").getVuelo("IB20").insertarPasajero(new Pasajero("Alejandro", "20Vghp", "Peruana"));
		aero[0].getCompañia("AeroPeru").getVuelo("IB20").insertarPasajero(new Pasajero("Maria", "PJKL20", "Mexicana"));
		aero[0].getCompañia("LATAM").getVuelo("FC12").insertarPasajero(new Pasajero("Raul", "JH21KL", "Peruana"));
		
		aero[1] = new AeropuertoPrivado("Central Ciudad Real", "Ciudad Real", "España");
		aero[1].insertarCompañia(new Compañia("AirEuropa"));
		String empresas[] = {"Cobresol","Anguila34"};
		((AeropuertoPrivado)aero[1]).insertarEmpresas(empresas);
		aero[1].getCompañia("AirEuropa").insertarVuelo(new Vuelo("AE025", "Madrid", "Buenos Aires", 300.00, 250));
		aero[1].getCompañia("AirEuropa").getVuelo("AE025").insertarPasajero(new Pasajero("Facundo", "141FC", "Argentino"));
		
		aero[2] = new AeropuertoPublico("Aeropuerto Bogota", "Bogota", "Colombia", 20000000);
		aero[2].insertarCompañia(new Compañia("AirAmerica"));
		aero[2].insertarCompañia(new Compañia("VuelaBogota"));
		aero[2].getCompañia("AirAmerica").insertarVuelo(new Vuelo("AE030", "Bogota", "Lima", 140.20, 120));
		aero[2].getCompañia("AirAmerica").insertarVuelo(new Vuelo("AE031", "Bogota", "Lima", 200.00, 180));
		aero[2].getCompañia("AirAmerica").getVuelo("AE030").insertarPasajero(new Pasajero("Dilan", "PKR34", "Colombiana"));
		aero[2].getCompañia("AirAmerica").getVuelo("AE031").insertarPasajero(new Pasajero("Oliver", "HI-LO", "Americana"));
		
		aero[3] = new AeropuertoPublico("Aeropuerto Mexico", "Mexico", "Mexico", 40000000);
		aero[3].insertarCompañia(new Compañia("AeroMexico"));
		aero[3].getCompañia("AeroMexico").insertarVuelo(new Vuelo("IB2040", "Mexico", "Nueva Zelanda", 400.00, 200));
		aero[3].getCompañia("AeroMexico").insertarVuelo(new Vuelo("IB2042", "Mexico", "Lima", 150.99, 150));
		aero[3].getCompañia("AeroMexico").getVuelo("IB2040").insertarPasajero(new Pasajero("Pablo", "P4B10", "Mexicana"));
	}
	
	public static void menu() {
		String nombreAeropuerto,nombreCompañia;
		Aeropuerto aeropuerto;
		int opcion=0;
		do {
			System.out.println("\t.:MENU:.");
			System.out.println("1.Ver aeropuertos gestionados (Publicos o Privados");
			System.out.println("2.Ver Empresas(Privado) o subvencion(Publico)");
			System.out.println("3.Lista de compañias de un aeropuerto");
			System.out.println("4.Lista de vuelos por compañia");
			System.out.println("5.Listar posibles vuelos de origen a destino");
			System.out.println("6.Salir");
			System.out.println("Opcion: ");
			opcion = entrada.nextInt();
			
			switch(opcion) {
			case 1 : //Ver aeropuertos gestionados (publicos o privados)
				System.out.println("");
				mostrarDatosAeropuertos(aeropuertos);
				break;
			case 2 : //Ver empresas(privado)subvencion(publico)
				System.out.println("");
				mostrarPatrocinio(aeropuertos);
				break;
			case 3 ://Listar compañias
				entrada.nextLine();
				System.out.println("");
				System.out.println("\nDigite el nombre del aeropuerto: ");
				nombreAeropuerto = entrada.nextLine();
				aeropuerto = buscarAeropuerto(nombreAeropuerto, aeropuertos);
				if(aeropuerto == null) {
					System.out.println("El aeropuerto no existe");
				}else {
					mostrarCompañias(aeropuerto);
				}
				break;
			case 4 ://Lista de vuelos
				System.out.println("\nDigite el nombre del aeropuerto");
				nombreAeropuerto = entrada.nextLine();
				aeropuerto = buscarAeropuerto(nombreAeropuerto, aeropuertos);
				if(aeropuerto == null) {
					System.out.println("El aeropuerto no existe");
				}else {
					System.out.println("Digite el nombre de la compañia: ");
					nombreCompañia = entrada.nextLine();
				}
				break;
			case 5 ://Lista vuelos de ciudad origen a destino
				break;
			case 6 : break;
			default:System.out.println("Se equivoco de opcion");
			break;
			}
			
			System.out.println("");
			
		} while (opcion!=6);
	}

public static void mostrarDatosAeropuertos(Aeropuerto aeropuertos[]){
	for(int i=0;i<aeropuertos.length;i++) {
		if(aeropuertos[i] instanceof AeropuertoPrivado) {
			System.out.println("Aeropuerto privado");
			System.out.println("Nombre: "+aeropuertos[i].getNombre());
			System.out.println("Ciudad: "+aeropuertos[i].getCiudad());
			System.out.println("Pais: "+aeropuertos[i].getPais());
		}else {
			System.out.println("Aeropuerto publico");
			System.out.println("Nombre: "+aeropuertos[i].getNombre());
			System.out.println("Ciudad: "+aeropuertos[i].getCiudad());
			System.out.println("Pais: "+aeropuertos[i].getPais());
		}
		
		System.out.println("");
	}
	
}


public static void mostrarPatrocinio(Aeropuerto aeropuertos[]) {
	String empresas[];
	for(int i=0;i<aeropuertos.length;i++) {
		if(aeropuertos[i] instanceof AeropuertoPrivado) {
			System.out.println("Aeropuerto privado: "+aeropuertos[i].getNombre());
			empresas = ((AeropuertoPrivado)aeropuertos[i]).getListaEmpresas();
			System.out.println("Empresas: ");
			for(int j=0;j<empresas.length;j++) {
				System.out.println(empresas[j]);
			}
		}else {
			System.out.println("Aeropuerto publico: "+aeropuertos[i].getNombre());
			System.out.println("Subvencion: "+ ((AeropuertoPublico)aeropuertos[i]).getSubvencion());
		}
		System.out.println("");
	}
}

public static Aeropuerto buscarAeropuerto(String nombre, Aeropuerto aeropuertos[]) {
	boolean encontrado = false;
	int i =0;
	Aeropuerto aero = null; 
	while(!encontrado && i< aeropuertos.length) {
		if(nombre.equals(aeropuertos[i].getNombre())) {
			encontrado = true;
			aero = aeropuertos[i];
		}
		i++;
	}
	return aero;
}


public static void mostrarCompañias(Aeropuerto aeropuerto) {
	System.out.println("\nLas compañias del aeropuerto "+aeropuerto.getNombre());
	for(int i=0;i<aeropuerto.getNroCompañia();i++) {
		System.out.println(aeropuerto.getCompañia(i).getNombre());
	}
}

}
